# A GitHub Actions workflow that builds a package on many platforms.

# Copyright (C) 2024 Free Software Foundation, Inc.
#
# This file is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Reference documentation for this file:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# Syntax of multiline strings in YAML: https://yaml-multiline.info/
#
# Customization:
# - Review and adapt the part of this file before the 'jobs:' line.
# - You can disable a particular job by adding a line
#     if: ${{ false }}
# - You can disable a particular matrix value for a particular job by adding an
#   'exclude' element to the 'matrix' element, such as:
#        exclude:
#          - bitness: 64

name: Solaris make check

on:
  push:

# Variables.
env:
  package: libtool
  branch: development

jobs:
  build-tarball:
    if: ${{ startsWith(github.event.head_commit.message, '[solaris]') }}
    runs-on: ubuntu-22.04
    steps:
      # This is needed because we run a script stored in this repository.
      - uses: actions/checkout@v4
      - run: uname -a
      - run: id
      - run: env | LC_ALL=C sort
      - run: pwd
      # Install Ubuntu packages.
      # List of packages: https://packages.ubuntu.com/
      - run: sudo apt update; sudo apt install help2man texlive-base texlive-latex-base
      - run: |
          ./build-dev-tarball.sh '${{ env.package }}' '${{ env.branch }}' '${{ github.event.head_commit.message }}'
      # Doc: https://github.com/actions/upload-artifact?tab=readme-ov-file#usage
      - if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: logs-build-tarball-failed
          path: |
            ${{ env.package }}/config.cache
            ${{ env.package }}/config.log
            ${{ env.package }}/config.status
            ${{ env.package }}/log[1234]
            ${{ env.package }}/tests/testsuite.dir/*/testsuite.log
          retention-days: 3
          overwrite: true
      # Doc: https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts
      #      https://github.com/actions/upload-artifact?tab=readme-ov-file#usage
      - uses: actions/upload-artifact@v4
        with:
          name: tarball
          path: ${{ env.package }}/${{ env.package }}-*.tar.gz
          if-no-files-found: error
          retention-days: 3
          compression-level: 0
          overwrite: true
  check-solaris11:
    name: make check on Solaris 11
    needs: build-tarball
    runs-on: ubuntu-22.04
    steps:
      # This is needed because we run a script stored in this repository.
      - uses: actions/checkout@v4
      # Download the artifact to $GITHUB_WORKSPACE.
      # Doc: https://github.com/actions/download-artifact?tab=readme-ov-file#usage
      - uses: actions/download-artifact@v4
        with:
          name: tarball
      # Doc: https://github.com/vmactions/solaris-vm
      - uses: vmactions/solaris-vm@v1
        with:
          # We can choose among
          # - the '11.4' image and installing gcc from the Oracle packages site, or
          # - the '11.4-gcc' image, that has gcc installed in /opt/csw/bin.
          release: '11.4'
          mem: 2048
          prepare: |
            : "Install Solaris packages"
            : "List of packages: http://pkg.oracle.com/solaris/release/en/index.shtml"
            pkg install gnu-m4 automake autoconf gcc gcc-c++ gcc-gfortran
          run: |
            set -x
            uname -a
            id
            env | LC_ALL=C sort
            pwd
            ls -l
            : "The locale set by default, C.UTF-8, is not a valid locale on Solaris 11."
            : "This causes a failure of the test-update-copyright.sh test."
            export LANG=en_US.UTF-8
            export CPPFLAGS="-Wall"
            export CC="gcc -m64"
            export CXX="g++ -m64"
            ./build-on.sh '${{ env.package }}' '' 'make' '${{ github.event.head_commit.message }}'
      - if: ${{ !contains(github.event.head_commit.message, '[pre-release]') }}
        run: tar czf ${{ env.package }}-build.tar.gz ${{ env.package }}-*/
      # Doc: https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts
      #      https://github.com/actions/upload-artifact?tab=readme-ov-file#usage
      - if: ${{ !contains(github.event.head_commit.message, '[pre-release]') }}
        uses: actions/upload-artifact@v4
        with:
          name: logs-solaris11
          path: ${{ env.package }}-build.tar.gz
          if-no-files-found: error
          retention-days: 3
          compression-level: 0
          overwrite: true
  check-solaris11-omnios:
    name: make check on Solaris 11 OmniOS
    needs: build-tarball
    runs-on: ubuntu-22.04
    steps:
      # This is needed because we run a script stored in this repository.
      - uses: actions/checkout@v4
      # Download the artifact to $GITHUB_WORKSPACE.
      # Doc: https://github.com/actions/download-artifact?tab=readme-ov-file#usage
      - uses: actions/download-artifact@v4
        with:
          name: tarball
      # Doc: https://github.com/vmactions/omnios-vm
      - uses: vmactions/omnios-vm@v1
        with:
          release: "r151048"
          mem: 2048
          prepare: |
            : "Install Solaris packages"
            : "List of packages: https://pkg.omnios.org/r151048/core/en/index.shtml"
            pkg install \
                developer/build/automake developer/build/autoconf \
                developer/gcc13 developer/object-file system/header system/library/math \
                developer/build/gnu-make
          run: |
            set -x
            uname -a
            id
            env | LC_ALL=C sort
            pwd
            ls -l
            export CPPFLAGS="-Wall"
            ./build-on.sh '${{ env.package }}' '' 'gmake' '${{ github.event.head_commit.message }}'
      - if: ${{ !contains(github.event.head_commit.message, '[pre-release]') }}
        run: tar czf ${{ env.package }}-build.tar.gz ${{ env.package }}-*/
      # Doc: https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts
      #      https://github.com/actions/upload-artifact?tab=readme-ov-file#usage
      - if: ${{ !contains(github.event.head_commit.message, '[pre-release]') }}
        uses: actions/upload-artifact@v4
        with:
          name: logs-solaris11-omnios
          path: ${{ env.package }}-build.tar.gz
          if-no-files-found: error
          retention-days: 3
          compression-level: 0
          overwrite: true
