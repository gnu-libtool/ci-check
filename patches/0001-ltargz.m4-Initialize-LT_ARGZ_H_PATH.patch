From 828d6f93f5bdd952ce02a6059577f163a1a5ae1f Mon Sep 17 00:00:00 2001
From: Ileana Dumitrescu <ileanadumitrescu95@gmail.com>
Date: Mon, 14 Oct 2024 17:08:47 +0300
Subject: [PATCH] ltargz.m4: Initialize LT_ARGZ_H_PATH

* m4/ltargz.m4: Set LT_ARGZ_H_PATH initially as an empty string and to
  expected path if LT_ARGZ_H is not an empty string.
---
 libltdl/ltdl.mk | 2 +-
 m4/ltargz.m4    | 3 ++-
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/libltdl/ltdl.mk b/libltdl/ltdl.mk
index 2e224cbc..8777f562 100644
--- a/libltdl/ltdl.mk
+++ b/libltdl/ltdl.mk
@@ -137,7 +137,7 @@ EXTRA_DIST	+= libltdl/libltdl/lt__argz_.h \
 
 # We need the following in order to create an <argz.h> when the system
 # doesn't have one that works with the given compiler.
-all-local $(lib_OBJECTS): libltdl/libltdl/$(LT_ARGZ_H)
+all-local $(lib_OBJECTS): $(LT_ARGZ_H_PATH)
 libltdl/libltdl/lt__argz.h: libltdl/libltdl/lt__argz_.h
 	$(AM_V_at)$(mkinstalldirs) . libltdl/libltdl
 	$(AM_V_GEN)cp $(srcdir)/libltdl/libltdl/lt__argz_.h $@-t
diff --git a/m4/ltargz.m4 b/m4/ltargz.m4
index 327b0b47..f095ec7b 100644
--- a/m4/ltargz.m4
+++ b/m4/ltargz.m4
@@ -26,8 +26,9 @@ AC_CHECK_TYPES([error_t],
 #endif])
 
 LT_ARGZ_H=
+LT_ARGZ_H_PATH=
 AC_CHECK_FUNCS([argz_add argz_append argz_count argz_create_sep argz_insert \
-	argz_next argz_stringify], [], [LT_ARGZ_H=lt__argz.h; AC_LIBOBJ([lt__argz])])
+	argz_next argz_stringify], [], [LT_ARGZ_H=lt__argz.h; LT_ARGZ_H_PATH=libltdl/libltdl/$LT_ARGZ_H; AC_LIBOBJ([lt__argz])])
 
 dnl if have system argz functions, allow forced use of
 dnl libltdl-supplied implementation (and default to do so
-- 
2.45.2

