From 37b7146c13a62a46273fd1478e6ad8fe42f9b551 Mon Sep 17 00:00:00 2001
From: Brian Inglis <Brian.Inglis@SystematicSW.ab.ca>
Date: Sun, 27 Jun 2021 23:09:02 +0000
Subject: [PATCH] libtool: mingw hangs in func_convert_core_msys_to_w32

The `cmd //c ...` is is an invocation of the Windows console command
line shell `cmd`. The slashes are Windows console shell command line
option switch characters '/', with `cmd /c ...` meant to be
equivalent to `sh -c ...`.

It results in the Windows `cmd` shell being invoked as an interactive
console shell, as if invoked with the '/k' switch, but ignoring any
provided command string, hanging builds!

* build-aux/ltmain.in: Remove additional forward slash for option.
---
 build-aux/ltmain.in | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/build-aux/ltmain.in b/build-aux/ltmain.in
index fb43fef0..b69bf91f 100644
--- a/build-aux/ltmain.in
+++ b/build-aux/ltmain.in
@@ -961,7 +961,7 @@ func_convert_core_msys_to_w32 ()
   $debug_cmd
 
   # awkward: cmd appends spaces to result
-  func_convert_core_msys_to_w32_result=`( cmd //c echo "$1" ) 2>/dev/null |
+  func_convert_core_msys_to_w32_result=`( cmd /c echo "$1" ) 2>/dev/null |
     $SED -e 's/[ ]*$//' -e "$sed_naive_backslashify"`
 }
 #end: func_convert_core_msys_to_w32
-- 
2.45.2

